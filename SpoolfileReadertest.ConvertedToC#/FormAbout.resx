<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAYEBAUEBAYFBQUGBgYHCQ4JCQgICRINDQoOFRIWFhUSFBQX
        GiEcFxgfGRQUHScdHyIjJSUlFhwpLCgkKyEkJST/2wBDAQYGBgkICREJCREkGBQYJCQkJCQkJCQkJCQk
        JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCT/wAARCAAtAZADAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5g0jTH1nUrewjuLO2edtolvJ1ghTjOWdiAo9zQBd8TeGJ/C13
        FbT6jo9+ZY/MEmmX8V2i8kYZoyQDx0PrQBjUAb+v+Drnw9p9pfTaroN4t1jEVhqcNzLHlc/OiMSvpz34
        oAwKACgAoAKACgDX1bw3NpGmadqEmoaTcpfpvSG0vo5poeAcSopJjPPRsdD6UAZFABQAUAFABQAUAb/h
        fwbdeKpHEOqaBp0afel1TVILUZ9g7Bj+ANAEvinwLd+FESWXWfDepxOdu7StXguiD7orbx9duPegDm6A
        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
        t9PeszEj5lWIJhgAfmZgOT3xQBheANTivbfUfCc1v4JtV1gHbq3iC3cNZMBx5U6AmLPX5ht4568gHTaf
        8KIvCGq6fq8vj34SayI7qNFs7jVHuYJGZtoMqIg/dgncxJCgDnjggHC/EP8A5HTVf+Rd/wBd/wAy9/yD
        /uj/AFP+z/XNAHO0AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQB2Fvqtuvwx
        udNMfg/z2vhIHktJTrGPl+5Lt8sRcdC2fvcc0AcfQAUAFABQAUAFABQAUAehWZs/iJoOmaTNefD3wpNp
        K+WtzNBcW1zfLtA3TSIjpIeOpw2c+poALie1+GulajpUE/w98XTavEY2u47ee7msBtIDRPIiIjfMTkbj
        kDPQUAee0AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA
        FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAH
        /9k=
</value>
  </data>
</root>